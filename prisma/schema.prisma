// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  men
  women
  kids
}

enum SellerStatus {
  PENDING
  APPROVED
  REJECTED
}

enum SubCategory {
  topwear
  bottomwear
  winterwear
}

enum Size {
  S
  M
  L
  XL
  XXL
}

enum UserRole {
  ADMIN
  SELLER
  CUSTOMER
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  image     String?
  password  String?
  role      UserRole @default(CUSTOMER)
  isOAuth   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  seller    Seller?
}

model Seller {
  id          String        @id @default(cuid())
  userId      String        @unique
  user        User          @relation(fields: [userId], references: [id])
  email       String?
  address     String
  phone       String
  managerName String?
  postalCode  String?
  status      SellerStatus?
  products    Product[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Product {
  id            String      @id @default(cuid())
  name          String
  description   String
  price         Float
  stockQuantity Int
  image         String[]
  category      Category
  subCategory   SubCategory
  stockSize     SizeStock[]
  sellerId      String
  seller        Seller      @relation(fields: [sellerId], references: [id])
  ratings       Int?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model SizeStock {
  id        String   @id @default(cuid())
  size      Size
  quantity  Int
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SystemParamater {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
